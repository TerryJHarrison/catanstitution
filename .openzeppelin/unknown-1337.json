{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x45d81316C0C61282bC884E38Cb3c5bB32E0Bd735",
    "txHash": "0x8f247ae6d3126fc5d05032ef27686bc99d5ffe971def0f9971db7a3a057f3256"
  },
  "proxies": [
    {
      "address": "0xc824c17885C6f549F14aA978A77768DF233ffee8",
      "txHash": "0x53e61c826a1ec00e8ca2fd1957a7ebbd17e0caca96fb29307dfd57205cd21841",
      "kind": "transparent"
    },
    {
      "address": "0xc94D96fFfd27599C525f48bb1CdAe5e337b67489",
      "txHash": "0x94118960766c3d8a40667c293388598f5ff48078d5ad1f61dc57150f6928cef5",
      "kind": "transparent"
    },
    {
      "address": "0xe37FDbF9f183bCE106aA44EeD16Caf1E47A65A0E",
      "txHash": "0xce05ee16dfcd5ad6d9507b3fdb7fa00b7ac5affd66fd2433e2fe625ae8368ac4",
      "kind": "transparent"
    },
    {
      "address": "0xBFdaC61Aa200589A493fA70b9c44bB36bABAa9dc",
      "txHash": "0x1d005dd8e547b26c5a0e3219a80e436def59bf875f8e7382a0b3524f65e39d66",
      "kind": "transparent"
    },
    {
      "address": "0x06edaF0Df736455Dd6345FC737DC8389cA27049B",
      "txHash": "0x9ed7045ee187c3c63c105434364d488dea5e283717d18bc71f17297a0b65a229",
      "kind": "transparent"
    },
    {
      "address": "0x006ea45A236eAFAEB49a50B6E8aB6e446D4BB6e2",
      "txHash": "0x73277610365021d1286afb88a1bfcf6cae67100a94b92df0b2a7cde44d2c4d83",
      "kind": "transparent"
    },
    {
      "address": "0xfA6E380f9fF8Ec36FeE5bC71f2AD9a42491E523c",
      "txHash": "0x2c772fdf8aec043209c432a301b171081bc44c6da4f3227188e63ccb3f8905fc",
      "kind": "transparent"
    },
    {
      "address": "0xE731a7c31e3d5350703f9F9cb8C8C1fD28b267cd",
      "txHash": "0x5d3f50581ae6935d069b53d594f8e4f60ebd088264c954adef897aadace2e186",
      "kind": "transparent"
    },
    {
      "address": "0x51E1d2Af96E852E3e41F7320CacCF22FDf088BeA",
      "txHash": "0x1477777d8120821d2bf70099acd0d1df259aa2d1565a318aee4ddf65df62b11c",
      "kind": "transparent"
    },
    {
      "address": "0x5872077a765006bd7a957a6EfA8e2e7a779B0b53",
      "txHash": "0xb8be1b6dd7687b2bec6928e7450004b367409f90a004c555a44e360e46cca250",
      "kind": "transparent"
    },
    {
      "address": "0x5ea77863604b8c560fD7d1C998aE7cb68C222D24",
      "txHash": "0x392e67cdcd9ce31ca7a3192b50f7c8036bbe6ce721193d90bb18db7eaf6a2c9f",
      "kind": "transparent"
    },
    {
      "address": "0x9a739D7D7749164dF4396A2b9fD9E69413350727",
      "txHash": "0x2fb6293b8c0d962ec1e619d10eb901fafcc873c48209b037e8aaf1c89ddc843a",
      "kind": "transparent"
    },
    {
      "address": "0x780D767C67e309Dd9A9Ea246AAE236BB2caA1c48",
      "txHash": "0x39bbed67e931206f12adae0dfb443c8e0972c3a9dbd1f3656e68500f84b9e8ec",
      "kind": "transparent"
    },
    {
      "address": "0x007524a2aD65449266368F017D7f79CFf215b91E",
      "txHash": "0x7b1fd7016069e1c25f94a0bde581502b0ab0129ae34d0a3fb99ae24aa81eaef4",
      "kind": "transparent"
    }
  ],
  "impls": {
    "4c2bd281cae8e947543cf08b6374e5408a8f89f826ee4a865ccaeed03ed2ade0": {
      "address": "0x3ad8E0076313a3e8022AAf90218c60183039BA29",
      "txHash": "0x4e3b99fd0621bfb807a614b91f64f353f525c243b52e0e05e194f9a546ab9124",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)81_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "VoterPool",
            "label": "voters",
            "type": "t_struct(AddressSet)3621_storage",
            "src": "../project:/contracts/open-orgs/VoterPool.sol:14"
          }
        ],
        "types": {
          "t_struct(AddressSet)3621_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3346_storage"
              }
            ]
          },
          "t_struct(Set)3346_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)81_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)81_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "890983bcd7562d88e5a06fa0e9f819949b5140a22d36739711f7bb4cbb9f67b2": {
      "address": "0x6f18281eFcb6d8C6ca79f45cA4067f4f92288f22",
      "txHash": "0xd6344051044cd8c84a11cf02e220e4a69c0c94be940ef198737061877938842a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)81_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "Constitution",
            "label": "voterPool",
            "type": "t_contract(VoterPool)8567",
            "src": "../project:/contracts/open-orgs/Constitution.sol:18"
          },
          {
            "contract": "Constitution",
            "label": "resolver",
            "type": "t_contract(SingleHolderTitle)8360",
            "src": "../project:/contracts/open-orgs/Constitution.sol:19"
          },
          {
            "contract": "Constitution",
            "label": "numAcceptedAmendments",
            "type": "t_uint256",
            "src": "../project:/contracts/open-orgs/Constitution.sol:42"
          },
          {
            "contract": "Constitution",
            "label": "numProposedAmendments",
            "type": "t_uint256",
            "src": "../project:/contracts/open-orgs/Constitution.sol:43"
          },
          {
            "contract": "Constitution",
            "label": "amendments",
            "type": "t_mapping(t_uint256,t_struct(Amendment)7729_storage)",
            "src": "../project:/contracts/open-orgs/Constitution.sol:44"
          },
          {
            "contract": "Constitution",
            "label": "proposals",
            "type": "t_mapping(t_address,t_struct(Amendment)7729_storage)",
            "src": "../project:/contracts/open-orgs/Constitution.sol:45"
          },
          {
            "contract": "Constitution",
            "label": "proposalVotes",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_enum(VoteStatus)7662))",
            "src": "../project:/contracts/open-orgs/Constitution.sol:46"
          }
        ],
        "types": {
          "t_contract(VoterPool)8567": {
            "label": "contract VoterPool"
          },
          "t_contract(SingleHolderTitle)8360": {
            "label": "contract SingleHolderTitle"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Amendment)7729_storage)": {
            "label": "mapping(uint256 => struct Constitution.Amendment)"
          },
          "t_struct(Amendment)7729_storage": {
            "label": "struct Constitution.Amendment",
            "members": [
              {
                "label": "amendmentNum",
                "type": "t_uint256"
              },
              {
                "label": "text",
                "type": "t_string_storage"
              },
              {
                "label": "author",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(AmendmentStatus)7658"
              },
              {
                "label": "numVotes",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(AmendmentStatus)7658": {
            "label": "enum Constitution.AmendmentStatus",
            "members": [
              "PASSED",
              "FAILED",
              "PROPOSED"
            ]
          },
          "t_mapping(t_address,t_struct(Amendment)7729_storage)": {
            "label": "mapping(address => struct Constitution.Amendment)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_enum(VoteStatus)7662))": {
            "label": "mapping(address => mapping(uint256 => enum Constitution.VoteStatus))"
          },
          "t_mapping(t_uint256,t_enum(VoteStatus)7662)": {
            "label": "mapping(uint256 => enum Constitution.VoteStatus)"
          },
          "t_enum(VoteStatus)7662": {
            "label": "enum Constitution.VoteStatus",
            "members": [
              "NOT_VOTED",
              "FOR",
              "AGAINST"
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)81_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)81_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2deb3fef21a7588b590c5ec7fc2e559876f15cd997ed1ab53d19e38029aede07": {
      "address": "0x519C86F10Cf50FBABf8518808B43a11d0D47042c",
      "txHash": "0xd5b915cc9855d71b478c146562847dbb8a32bfa180bc81020859fa016ed68888",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)81_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "CatanKeeper",
            "label": "controller",
            "type": "t_contract(Catanstitution)4943",
            "src": "../project:/contracts/CatanKeeper.sol:21"
          },
          {
            "contract": "CatanKeeper",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "../project:/contracts/CatanKeeper.sol:22"
          },
          {
            "contract": "CatanKeeper",
            "label": "allowedRecorders",
            "type": "t_contract(VoterPool)8567",
            "src": "../project:/contracts/CatanKeeper.sol:23"
          },
          {
            "contract": "CatanKeeper",
            "label": "twoPlayerGameId",
            "type": "t_uint256",
            "src": "../project:/contracts/CatanKeeper.sol:38"
          },
          {
            "contract": "CatanKeeper",
            "label": "threePlayerGameId",
            "type": "t_uint256",
            "src": "../project:/contracts/CatanKeeper.sol:39"
          },
          {
            "contract": "CatanKeeper",
            "label": "fourPlayerGameId",
            "type": "t_uint256",
            "src": "../project:/contracts/CatanKeeper.sol:40"
          },
          {
            "contract": "CatanKeeper",
            "label": "fivePlayerGameId",
            "type": "t_uint256",
            "src": "../project:/contracts/CatanKeeper.sol:41"
          },
          {
            "contract": "CatanKeeper",
            "label": "sixPlayerGameId",
            "type": "t_uint256",
            "src": "../project:/contracts/CatanKeeper.sol:42"
          },
          {
            "contract": "CatanKeeper",
            "label": "recordedTwoPlayerGames",
            "type": "t_mapping(t_uint256,t_struct(TwoPlayer)7446_storage)",
            "src": "../project:/contracts/CatanKeeper.sol:44"
          },
          {
            "contract": "CatanKeeper",
            "label": "recordedThreePlayerGames",
            "type": "t_mapping(t_uint256,t_struct(ThreePlayer)7461_storage)",
            "src": "../project:/contracts/CatanKeeper.sol:45"
          },
          {
            "contract": "CatanKeeper",
            "label": "recordedFourPlayerGames",
            "type": "t_mapping(t_uint256,t_struct(FourPlayer)7480_storage)",
            "src": "../project:/contracts/CatanKeeper.sol:46"
          },
          {
            "contract": "CatanKeeper",
            "label": "recordedFivePlayerGames",
            "type": "t_mapping(t_uint256,t_struct(FivePlayer)7503_storage)",
            "src": "../project:/contracts/CatanKeeper.sol:47"
          },
          {
            "contract": "CatanKeeper",
            "label": "recordedSixPlayerGames",
            "type": "t_mapping(t_uint256,t_struct(SixPlayer)7530_storage)",
            "src": "../project:/contracts/CatanKeeper.sol:48"
          },
          {
            "contract": "CatanKeeper",
            "label": "wins",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CatanKeeper.sol:51"
          },
          {
            "contract": "CatanKeeper",
            "label": "losses",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CatanKeeper.sol:52"
          },
          {
            "contract": "CatanKeeper",
            "label": "highestWinMargin",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/CatanKeeper.sol:53"
          }
        ],
        "types": {
          "t_contract(Catanstitution)4943": {
            "label": "contract Catanstitution"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(VoterPool)8567": {
            "label": "contract VoterPool"
          },
          "t_mapping(t_uint256,t_struct(TwoPlayer)7446_storage)": {
            "label": "mapping(uint256 => struct Games.TwoPlayer)"
          },
          "t_struct(TwoPlayer)7446_storage": {
            "label": "struct Games.TwoPlayer",
            "members": [
              {
                "label": "player_1",
                "type": "t_address"
              },
              {
                "label": "player_2",
                "type": "t_address"
              },
              {
                "label": "player_1_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_2_vp",
                "type": "t_uint8"
              },
              {
                "label": "variation",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(ThreePlayer)7461_storage)": {
            "label": "mapping(uint256 => struct Games.ThreePlayer)"
          },
          "t_struct(ThreePlayer)7461_storage": {
            "label": "struct Games.ThreePlayer",
            "members": [
              {
                "label": "player_1",
                "type": "t_address"
              },
              {
                "label": "player_2",
                "type": "t_address"
              },
              {
                "label": "player_3",
                "type": "t_address"
              },
              {
                "label": "player_1_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_2_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_3_vp",
                "type": "t_uint8"
              },
              {
                "label": "variation",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(FourPlayer)7480_storage)": {
            "label": "mapping(uint256 => struct Games.FourPlayer)"
          },
          "t_struct(FourPlayer)7480_storage": {
            "label": "struct Games.FourPlayer",
            "members": [
              {
                "label": "player_1",
                "type": "t_address"
              },
              {
                "label": "player_2",
                "type": "t_address"
              },
              {
                "label": "player_3",
                "type": "t_address"
              },
              {
                "label": "player_4",
                "type": "t_address"
              },
              {
                "label": "player_1_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_2_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_3_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_4_vp",
                "type": "t_uint8"
              },
              {
                "label": "variation",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(FivePlayer)7503_storage)": {
            "label": "mapping(uint256 => struct Games.FivePlayer)"
          },
          "t_struct(FivePlayer)7503_storage": {
            "label": "struct Games.FivePlayer",
            "members": [
              {
                "label": "player_1",
                "type": "t_address"
              },
              {
                "label": "player_2",
                "type": "t_address"
              },
              {
                "label": "player_3",
                "type": "t_address"
              },
              {
                "label": "player_4",
                "type": "t_address"
              },
              {
                "label": "player_5",
                "type": "t_address"
              },
              {
                "label": "player_1_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_2_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_3_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_4_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_5_vp",
                "type": "t_uint8"
              },
              {
                "label": "variation",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(SixPlayer)7530_storage)": {
            "label": "mapping(uint256 => struct Games.SixPlayer)"
          },
          "t_struct(SixPlayer)7530_storage": {
            "label": "struct Games.SixPlayer",
            "members": [
              {
                "label": "player_1",
                "type": "t_address"
              },
              {
                "label": "player_2",
                "type": "t_address"
              },
              {
                "label": "player_3",
                "type": "t_address"
              },
              {
                "label": "player_4",
                "type": "t_address"
              },
              {
                "label": "player_5",
                "type": "t_address"
              },
              {
                "label": "player_6",
                "type": "t_address"
              },
              {
                "label": "player_1_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_2_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_3_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_4_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_5_vp",
                "type": "t_uint8"
              },
              {
                "label": "player_6_vp",
                "type": "t_uint8"
              },
              {
                "label": "variation",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)81_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)81_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "177445d9a5dc368fd8f7d152dcca5736fdf91b725e10ccd92a8d443d575d2683": {
      "address": "0x4f4501be32813A84C3B8696361045ebbf3A8e7dE",
      "txHash": "0x47476a131286aa54ac4093e400a87c560ab53f39f6793814c681ce6d37a7dffd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:383"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)81_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "FluidVoteTitle",
            "label": "votes",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/open-orgs/FluidVoteTitle.sol:10"
          },
          {
            "contract": "FluidVoteTitle",
            "label": "voteCounts",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/open-orgs/FluidVoteTitle.sol:11"
          },
          {
            "contract": "FluidVoteTitle",
            "label": "voters",
            "type": "t_contract(VoterPool)8567",
            "src": "../project:/contracts/open-orgs/FluidVoteTitle.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(VoterPool)8567": {
            "label": "contract VoterPool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)81_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)81_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "31203467f3d07cdb3a0e40c0aff184b20ffb68eb16ede2071b2e4353c55a889f": {
      "address": "0x9c2C093c2D93B322691d30Ebb29DB9751bA7b342",
      "txHash": "0x660577051ea44d8b772b2d38736d86da65bfabd6d7bc53587f8b9f5c75503c12",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)81_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "UserNameRegistry",
            "label": "names",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "../project:/contracts/UserNameRegistry.sol:8"
          }
        ],
        "types": {
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)81_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)81_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "00e5c260f52ec9dc432d8a5c5e25a9393f74b1511f39ecf80a162f5ef038c18e": {
      "address": "0x060A32e0DF20d6DF1fEB308C1F1dc986eBBa2D6f",
      "txHash": "0x75bf143fbba6dd768cbb8e1a8928d98947fdd675a7a93b3bb5eb2fc3c1a7344d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:405"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:40"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)81_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "Catanstitution",
            "label": "catanKeeper",
            "type": "t_contract(CatanKeeper)4499",
            "src": "../project:/contracts/Catanstitution.sol:24"
          },
          {
            "contract": "Catanstitution",
            "label": "deFactoRRoC",
            "type": "t_address",
            "src": "../project:/contracts/Catanstitution.sol:29"
          },
          {
            "contract": "Catanstitution",
            "label": "deFactoPH",
            "type": "t_address",
            "src": "../project:/contracts/Catanstitution.sol:30"
          },
          {
            "contract": "Catanstitution",
            "label": "deFactoJaS",
            "type": "t_address",
            "src": "../project:/contracts/Catanstitution.sol:31"
          },
          {
            "contract": "Catanstitution",
            "label": "cvrHolders",
            "type": "t_contract(VoterPool)8567",
            "src": "../project:/contracts/Catanstitution.sol:34"
          },
          {
            "contract": "Catanstitution",
            "label": "rulerOfCatan",
            "type": "t_contract(FluidVoteTitle)8255",
            "src": "../project:/contracts/Catanstitution.sol:35"
          },
          {
            "contract": "Catanstitution",
            "label": "keeperOfTheCatanstitution",
            "type": "t_contract(FluidVoteTitle)8255",
            "src": "../project:/contracts/Catanstitution.sol:36"
          },
          {
            "contract": "Catanstitution",
            "label": "constitution",
            "type": "t_contract(Constitution)8051",
            "src": "../project:/contracts/Catanstitution.sol:37"
          },
          {
            "contract": "Catanstitution",
            "label": "userNames",
            "type": "t_contract(UserNameRegistry)7633",
            "src": "../project:/contracts/Catanstitution.sol:40"
          }
        ],
        "types": {
          "t_contract(CatanKeeper)4499": {
            "label": "contract CatanKeeper"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(VoterPool)8567": {
            "label": "contract VoterPool"
          },
          "t_contract(FluidVoteTitle)8255": {
            "label": "contract FluidVoteTitle"
          },
          "t_contract(Constitution)8051": {
            "label": "contract Constitution"
          },
          "t_contract(UserNameRegistry)7633": {
            "label": "contract UserNameRegistry"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)81_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)81_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    }
  }
}
